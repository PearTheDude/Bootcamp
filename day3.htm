<!doctype html>
<html>
<head>
    <title>Portfolio Day 3</title>
    <link rel="stylesheet" type="text/css" href="style.css">
    </head>
<body>
    <div id="container">
        <div id="header">
        <h1>THE PORTFOLIO</h1>
        </div>
        <div id="content">
            <div id="nav">
            <h3>Navigation</h3>
                <ul>
                <li><a href="index.htm">Home</a></li>
                <li><a href="day1.htm">DAY 1</a></li>
                <li><a href="day2.htm">DAY 2</a></li>
                <li><a class="selected" href="day3.htm">DAY 3</a></li>
                <li><a href="day4.htm">DAY 4</a></li>
                <li><a href="day5.htm">DAY 5</a></li>
                <li><a href="concl.htm">Conclusion</a></li>
                </ul>
            </div>
            <div id="main">
            <h2>Day 3</h2>
            <p>LISTEN</p>
            <p>  On day 3, after being reminded about the programming conventions such as “camelCasing” and proper indentation, as some students weren’t following it, we were presented with the days topics- repeat, loops and functions. These functions allow us to shorten our codes substantially, by using some basic math and logic. This would come in handy in the near future as the programs we would create were becoming both more complex and longer, and writing the same line over and over again was not efficient or even necessary. We were presented with a graph displaying how loops in programming work in the most easy to understand way: initialize – test –action – update – (repeat from test). We also were introduced to “while” and “for” loops, and the differences of the both were explained- “while” uses data defined outside of the loop, but “for” defines its own data inside of it.  After it functions “void” and “return” were presented. I knew about “void” from day one but I did not realize by this point how to use it properly. After this I finally understood how to use it to make complex applications with multiple screens and different options rather than one single function per app. This I would find quite useful for my final game.</p>
                <p>CREATE</p>
            <p>On second part of the day we were introduced to functions- ones that can be created by processing users themselves. That can be achieved with “void” functions. I had been introduced to these on day one, as I wanted implement a reset function for my application, but the I had no idea how it worked, or what “void” was supposed to be.  After this lecture I understood it, and saw what potential in my future programs it had and what I could do with it. I also realized it could have been used in my day 2 game to fix bugs if I had known how to use it properly back then.
            </p>
                
            <p>For create part we were given a task to create applications using loops and functions. That day the trend was making epilepsy triggers, with memes inside them. As I actually have epilepsy I decided not to do that, but instead use void to learn how to structure my programs and add multiple layers to them. I ended up having a small program, which had 12 squares (generated using loops), and by clicking on them, user is directed to a different screen- either interactive or just a picture (image below). The screens were created each in different “void” function and executed via “void draw”. In it were “if” functions, that compered integrals. If they were the same, it returned which “void” function to execute. 
            </p>
            <br>
            <img src="img/menu.png" width="202" height="288">
            
            </div>
        </div>
        <div id="footer">
        Oskars K. Argalis 16064437
        </div>
    </div>
    </body>
</html>